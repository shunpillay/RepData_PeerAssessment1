xyplot(weight ~ Time | Rat, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
plot(p)
?panel.abline
?trellis.par.set
?print.trellis
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
ggplot(movies, aes(votes, rating))
summary(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
setwd("~/Desktop/data-science-specialization-coursera/05-reproducible-research/project1/RepData_PeerAssessment1")
print("boo")
theData <- read.csv("activity.csv", header=TRUE, na.strings="NA")
theData
head(theData)
str(theData)
theData[,1]
theData[,2]
as.Date(theDatap[,2])
as.Date(theData[,2])
theData[,2] <- as.Date(theData[,2])
str(theData)
head(theData)
mean(theData[,1])
mean(theData[,1], na.rm=TRUE)
listOfDates <- unique(theData[,2])
listOfDates
length(listOfDates)
for(i in listOfDates){
print(i)
}
head(theData)
for(i in listOfDates){
dataForTheDay <- subset(theData, date==1)
}
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
}
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
mean(dataForTheDay[,1], na.rm=TRUE)
}
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
}
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
print(meanForTheDay)
}
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
stepsForTheDay <- sum(dataForTheDay[,1], na.rm=TRUE)
print(stepsForTheDay)
}
listOfDates <- unique(theData[,2])
stepData <- c()
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
stepsForTheDay <- sum(dataForTheDay[,1], na.rm=TRUE)
c(stepData, stepsForTheDay)
}
stepData
listOfDates <- unique(theData[,2])
stepData <- c()
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
stepsForTheDay <- sum(dataForTheDay[,1], na.rm=TRUE)
stepData <- c(stepData, stepsForTheDay)
}
stepData
hist(stepData)
hist(stepData, xlab = "Number of steps per day")
hist(stepData, main = "Histogram of daily step totals",  xlab = "Number of steps per day")
head(theData)
plot(theData$interval, theData$steps, type=”l”)
plot(theData$interval, theData$steps, type="l")
plot(theData$interval, theData$steps, type="l", xlab="x", ylab="y")
theIntervals <- unique(theData[,3])
theIntervals
theIntervals <- unique(theData[,3])
for(i in theIntervals){
print(i)
}
class(theData)
intervalData <- data.frame(row.names = c("interval","average"))
intervalData
head(intervalData)
str(intervalData)
intervalData <- data.frame(column.names = c("interval","average"))
intervalData
intervalData <- data.frame(interval = numeric(0), average = numeric(0))
intervalData <- data.frame(column.names = c("interval","average"))
intervalData
intervalData <- data.frame(interval = numeric(0), average = numeric(0))
intervalData
intervalData <- data.frame(interval = numeric(0), average = numeric(0))
theIntervals <- unique(theData[,3])
for(i in theIntervals){
dataForTheInterval <- subset(theData, interval==i)
intervalData <- rbind(intervalData, c(i, mean(dataForTheInterval[,1])))
}
intervalData
head(theData)
intervalData <- data.frame(interval = numeric(0), average = numeric(0))
theIntervals <- unique(theData[,3])
for(i in theIntervals){
dataForTheInterval <- subset(theData, interval==i)
intervalData <- rbind(intervalData, c(i, mean(dataForTheInterval[,1], na.rm=TRUE)))
}
intervalData
head(intervalData)
plot(intervalData$interval, intervalData$average type="l", xlab="Interval", ylab="Average Number of Steps")
plot(intervalData$interval, intervalData$average, type="l", xlab="Interval", ylab="Average Number of Steps")
intervalData$X0
intervalData$X1
plot(intervalData$X0, intervalData$X1, type="l", xlab="Interval", ylab="Average Number of Steps")
plot(intervalData$X1)
max(intervalData$X1)
intervalData[,$X1==max(intervalData$X1)]
intervalData[,X1==max(intervalData$X1)]
intervalData$X0[which.max(intervalData$X0)]
intervalData[,$X1==max(intervalData$X1)]
intervalData$X0[which.max(intervalData$X0)]
plot(intervalData$X0, intervalData$X1, type="l", xlab="Interval", ylab="Average Number of Steps")
intervalWithMax <- intervalData$X0[which.max(intervalData$X1)]
intervalWithMax
head(theData)
table(theData$steps)
table(theData$date)
table(theData$interval)
theData$steps
sum(is.na(theData$steps))
sum(is.na(theData$date))
sum(is.na(theData$interval))
date(0)
date("")
meansPerDay =  data.frame(dateValue, meanValue)
meansPerDay =  data.frame(dateValue = as.Date(character()), meanValue=numeric(0))
meansPerDay
meansPerDay =  data.frame(dateValue = as.Date(character()), meanValue=numeric(0))
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
entryForTheDay <- c(i, meanForTheDay)
meanForTheDay <- rbind(entryForTheDay)
}
meansPerDay
sum(is.na(theData$steps))
sum(is.na(theData$date))
sum(is.na(theData$interval))
meansPerDay =  data.frame(dateValue = as.Date(character()), meanValue=numeric(0))
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
entryForTheDay <- c(i, meanForTheDay)
meanForTheDay <- rbind(meanForTheDay, entryForTheDay)
}
meansPerDay
meansPerDay =  data.frame(dateValue = as.Date(character()), meanValue=numeric(0))
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
entryForTheDay <- c(i, meanForTheDay)
meansPerDay <- rbind(meansPerDay, entryForTheDay)
}
meansPerDay
meansPerDay =  data.frame(dateValue = as.Date(character()), meanValue=numeric(0))
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
entryForTheDay <- c(as.Date(i), meanForTheDay)
meansPerDay <- rbind(meansPerDay, entryForTheDay)
}
for(i in listOfDates){
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
entryForTheDay <- c(as.Date.numeric(i), meanForTheDay)
meansPerDay <- rbind(meansPerDay, entryForTheDay)
}
listOfDates
meansPerDay =  data.frame(dateValue = as.Date(character()), meanValue=numeric(0))
for(i in listOfDates){
print(i)
dataForTheDay <- subset(theData, date==i)
meanForTheDay <- mean(dataForTheDay[,1], na.rm=TRUE)
entryForTheDay <- c(i, meanForTheDay)
meansPerDay <- rbind(meansPerDay, entryForTheDay)
}
length(meansPerDay)
meansPerDay
head(theData)
theModifiedData <- theData
head(theModifiedData)
theModifiedData$steps[is.na(theModifiedData$steps)] <- 1000000
head(theModifiedData)
intervalData
intervalData[intervalData$X0==2355]
intervalData[288]
intervalData[288,]
intervalData[288,][1]
intervalData[288,][2]
intervalData[288,][,2]
intervalData[intervalData$X0==2355,][,2]
intervalData[intervalData$X0==2350,][,2]
head(theModifiedData)
theModifiedData <- theData
theModifiedData$steps[is.na(theModifiedData$steps)] <- intervalData[intervalData$X0==theModifiedData$interval,][,2]
seq(4)
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
print(theModifiedData[i])
}
theModifiedData[1]
theModifiedData[1,]
for(i in seq(length(theModifiedData$steps))){
print(theModifiedData[i,])
}
theModifiedData[1,]
theModifiedData[1,][1]
theModifiedData[1,][2]
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
theModifiedData[i,][1] <- intervalData[intervalData$X0==theModifiedData[i,][3]][,2]
}
}
theModifiedData[1,]
theModifiedData[1,][3]
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
theModifiedData[i,][1] <- intervalData[intervalData$X0==lookupValue][,2]
}
}
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
theModifiedData[i,][1] <- intervalData[intervalData$X0==lookupValue][2]
}
}
theModifiedData
head(theModifiedData)
intervalData
intervalData[intervalData$X0==2355][2]
intervalData[intervalData$X0==2355][,2]
intervalData[intervalData$X0==2355]
intervalData
head(intervalData)
intervalData[intervalData$X0==2350]
intervalData[intervalData$X0==2340]
intervalData$X0
intervalData[intervalData$X0==0]
intervalData[intervalData$X0==5]
intervalData$X0
intervalData[intervalData$X0==2355]
intervalData[intervalData$X0==10]
intervalData[intervalData$X0==5]
intervalData[intervalData$X0==15]
intervalData[intervalData$X0==20]
intervalData$X0
intervalData
head(intervalData)
intervalData[intervalData$X0==15]
subset(intervalData, X0=5)
subset(intervalData, intervalData$X0=5)
subset(intervalData, intervalData$X0==5)
subset(intervalData, intervalData$X0==50)
subset(intervalData, intervalData$X0==50)[2]
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
head(theModifiedData)
subset(intervalData, intervalData$X0==0)[2]
subset(intervalData, intervalData$X0==5)[2]
theModifiedData <- theData
head(theModifiedData)
head(intervalData)
intervalData[intervalData$X0==10]
intervalData
str(intervalData)
subset(intervalData, intervalData$X0==2320)[2]
subset(intervalData, intervalData$X0==2320)[2] * 2
subset(intervalData, intervalData$X0==2320)[2] * 3
subset(intervalData, intervalData$X0==2320)[2] * 4
theModifiedData[2,]
theModifiedData[2,][1]
is.na(theModifiedData[2,])
is.na(theModifiedData[2,][1])
is.na(theModifiedData[3453,][1])
theModifiedData[3453,][1]
theModifiedData[3453,][1] <- 54
theModifiedData[3453,][1]
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
print(lookupValue)
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
subset(intervalData, intervalData$X0==2355)[2]
subset(intervalData, intervalData$X0==2360)[2]
head(theModifiedData)
subset(intervalData, intervalData$X0==5)[2]
theModifiedData[2,][1] <- subset(intervalData, intervalData$X0==5)[2]
head(theModifiedData)
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
print(c(lookupValue, value))
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
print(lookupValue)
print(value)
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
print(lookupValue)
print(value)
print("===")
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
print(i)
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
print(lookupValue)
print(value)
print("===")
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
print("===1")
print(i)
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
print("===2")
print(lookupValue)
print("===3")
print(value)
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
theModifiedData[17568]
theModifiedData[17568,]
theModifiedData[17568,][3]
as.numeric(theModifiedData[17568,][3])
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
print("===1")
print(i)
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
value <- as.numeric(value)
print("===2")
print(lookupValue)
print("===3")
print(value)
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
print("===1")
print(i)
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
lookupValue <- as.numeric(lookupValue)
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
print("===2")
print(lookupValue)
print("===3")
print(value)
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
head(modifiedData)
head(theModifiedData)
theModifiedData <- theData
for(i in seq(length(theModifiedData$steps))){
if(is.na(theModifiedData[i,][1])){
lookupValue <- theModifiedData[i,][3]
lookupValue <- as.numeric(lookupValue)
value <- subset(intervalData, intervalData$X0==lookupValue)[2]
theModifiedData[i,][1] <- subset(intervalData, intervalData$X0==lookupValue)[2]
}
}
modifiedStepData <- c()
for(i in listOfDates){
dataForTheDay <- subset(theModifiedData, date==i)
stepsForTheDay <- sum(dataForTheDay[,1])
modifiedStepData <- c(modifiedStepData, stepsForTheDay)
}
hist(modifiedStepData, main = "Histogram of daily step totals",  xlab = "Number of steps per day")
mean(modifiedStepData)
median(modifiedStepData)
rep(0:1)
rep(0:1, each = 50)
weekdays()
listOfDates
weekdays(listOfDates)
head(modifiedStepData)
head(theModifiedData)
theModifiedData$date
theModifiedData$date <- weekdays(theModifiedData$date)
theModifiedData
head(theModifiedData$date)
head(theModifiedData)
weekendData <- subset(theModifiedData, data == ("Monday" | "Tuesday" | "Wednesday"))
weekendData <- subset(theModifiedData, data == "Monday")
weekendData <- subset(theModifiedData, date == "Monday")
weekendData
weekendData <- subset(theModifiedData, date == ("Saturday" | "Sunday"))
weekendData <- subset(theModifiedData, date == "Saturday" | date == "Sunday")
weekendData
not(TRUE)
!(TRUE)
weekendData <- subset(theModifiedData, !(date == "Saturday" | date == "Sunday"))
weekendData
weekdayData <- subset(theModifiedData, !(date == "Saturday" | date == "Sunday"))
weekendData <- subset(theModifiedData, date == "Saturday" | date == "Sunday")
weekendData <- subset(theModifiedData, date == "Saturday" | date == "Sunday")
weekendData
weekdayIntervalData <- data.frame(interval = numeric(0), average = numeric(0))
theIntervals <- unique(weekdayData[,3])
for(i in theIntervals){
dataForTheInterval <- subset(weekdayData, interval==i)
weekdayIntervalData <- rbind(weekdayIntervalData, c(i, mean(dataForTheInterval[,1])))
}
weekdayIntervalData
weekendIntervalData <- data.frame(interval = numeric(0), average = numeric(0))
theIntervals <- unique(weekendData[,3])
for(i in theIntervals){
dataForTheInterval <- subset(weekendData, interval==i)
weekendIntervalData <- rbind(weekendIntervalData, c(i, mean(dataForTheInterval[,1])))
}
length(weekendData$steps)
length(weekdayData$steps)
length(weekdayIntervalData$X0)
length(weekendIntervalData$X0)
rep("weekend", 5)
c(rep("weekend", 5))
l <- length(weekendIntervalData$X0)
weekendIntervalData <- cbind(weekendIntervalData, rep("weekend", l))
head(weekendData)
head(weekendIntervalData)
l <- length(weekdayIntervalData$X0)
weekdayIntervalData <- cbind(weekdayIntervalData, rep("weekday", l))
l <- length(weekendIntervalData$X0)
weekendIntervalData <- cbind(weekendIntervalData, rep("weekend", l))
allIntervalData <- merge(weekdayIntervalData, weekendIntervalData)
allIntervalData
str(allIntervalData)
colnames(weekdayIntervalData) <- c("interval", "mean", "day")
colnames(weekendIntervalData) <- c("interval", "mean", "day")
allIntervalData <- merge(weekdayIntervalData, weekendIntervalData)
str(allIntervalData)
head(weekdayData)
head(weekdayIntervalData)
head(weekendIntervalData)
